#
# Note:
#  - There are 4 states for a job: not-yet-run, run success, run failure, and run skipped.
#    - "not-yet-run" is implict and all jobs start in this state.
#  - If statements, when evaluated as true [as on line #42] cause the job to NOT run and the job is marked as "skipped".
#    - Skipped jobs will cause any dependent jobs to be skipped as well. 
#  - You can get depndant jobs to always run [even if predicate jobs skip]
#    - See line #61...
#    - If uncommented, job-4 will always run even if job-2 and job-3 are skipped.
#    - If commented, job-4 will only run if job-2 and job-3 are run [ie not skipped or failed].
#  - Also, try out what happens if we force Job-2 to always fail
#    - See lines #46,47
#    - We add a step to job-2 that will return a non-zero exit code [ie fail]

# Display name of workflow
name: Execution


# runs when manually triggered using the UI or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      run-job-3:
        description: "Run job #3"
        required: true
        type: booleank
jobs:
  job-1:
    name: Job 1
    runs-on: ubuntu-latest
    steps:
    - name: Output for Job 1
      run: echo "This is Job 1. Will we run Job3 ${{ github.event.inputs.run-job-3 }}" 
  job-2:
    name: Job 2
    runs-on: ubuntu-latest
    needs:
      - job-1
    steps:
    - name: Output for Job 2
      run: echo "I am Job 2"
    #- name: Force Job 2 to fail
    #  run: exit 1
  job-3:
    name: Job 3
    if: github.event.inputs.run-job3 == 'true'
    runs-on: ubuntu-latest
    needs:
      - job-1
    steps:
    - name: Output for Job 3
      run: echo "I am Job 3"

  job-4:
    name: Job 4
    runs-on: ubuntu-latest
    # if: always()
    needs:
      - job-2
      - job-3
    steps:
    - name: Output for Job 4
      run: echo "I am Job 4"
        