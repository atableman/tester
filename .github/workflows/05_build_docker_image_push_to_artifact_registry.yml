# Requires secrets:
# - GCP_SERVICE_ACCOUNT
#   - Content of the service account key file. This is used to authenticate to Google Cloud.
#
# - Also a few env vars are used [that in producrtion should be set in the workflow context]:
#   - PROJECT_ID: second-chariot-456413-s8
#   - GAR_LOCATION: us-central1
#   - REPOSITORY: muffin-lobster-pulumi-repo
#   - IMAGE: main
#
# 
name: '05 - Push to Artifact Registry'

on: workflow_dispatch

env:
  PROJECT_ID: second-chariot-456413-s8
  GAR_LOCATION: us-central1
  REPOSITORY: muffin-lobster-pulumi-repo
  IMAGE: main

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: 'Docker buildy'
        run: |
          cd pulumi/projects/superset
          ls -la
          docker build --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA" .
      - 
        id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0.6.0'
        with:
          credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT }}'
          token_format: 'access_token'
      - 
        name: 'Docker Login to Artifact Registry'
        uses: 'docker/login-action@v3'
        with:
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
      - name: 'Docker push'
        run: |
          docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA"
      - name: 'Start Pulumi Build'
        id: request
        use: tyrrrz/action-http-request@master
        with:
          url: ${{ secrets.PLUMI_URL }}
          method: POST
          headers: |
            Authorization: token ${{ secrets.PLUMI_TOKEN }}
            Content-Type: application/json
          body: |
            {
              "operation": "refresh"
            }
          retry-count: 3
          retry-interval: 500
      - name: Print outputs
        run: |
          echo "Status code: ${{ steps.request.outputs.status }}"
          echo "Response headers: ${{ steps.request.outputs.headers }}"